{"version":3,"file":"index.025daa0b.js","sources":["../../../resources/js/components/alert/Alert.vue","../../../resources/js/views/SecurityList/utils/meUtils.ts","../../../resources/js/views/SecurityList/modules/Link/Stock.vue","../../../resources/js/views/SecurityList/modules/Link/Bond.vue","../../../resources/js/views/SecurityList/modules/Link/ETF.vue","../../../resources/js/views/SecurityList/modules/Link/Index.vue","../../../resources/js/components/stocksContainer/StocksContainer.vue","../../../resources/js/views/SecurityList/index.vue"],"sourcesContent":["<template>\n  <div class=\"tableAlert flexRowCenter\">\n    <img alt=\"alert\" :src=\"alert\" />\n    <p>{{ label }}</p>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport alert from '../../assets/icons/alert-circle.svg';\n\nexport default defineComponent({\n  name: 'Alert',\n  props: {\n    label: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      alert,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\" src=\"./style.scss\" />\n","import { DynamicObject } from '@/interfaces';\n\nclass MeUtils {\n  private readonly increaseBad = 'stock__increase--bad';\n\n  private readonly increaseGood = 'stock__increase--good';\n\n  private readonly increaseEmpty = 'stock__increase--no-data';\n\n  private readonly emptyText = '0.00';\n\n  public checkIncreaseClass(value: string | number | null): string {\n    if (value) {\n      const num = Number(value);\n      if (num >= 0) {\n        return this.increaseGood;\n      }\n      return this.increaseBad;\n    }\n    return this.increaseEmpty;\n  }\n\n  public checkExist(value: string | number | null): string | number {\n    if (!value) {\n      return this.emptyText;\n    }\n    return value;\n  }\n\n  public toFixed(value: string | number | null, to = 2): string {\n    const _value = this.checkExist(value);\n    if (_value !== this.emptyText) {\n      return Number(_value).toFixed(to);\n    }\n    return _value;\n  }\n\n  public isExistItem(item: DynamicObject | null): DynamicObject | null {\n    if (item) {\n      const itemKeysLength = Object.keys(item).length;\n      if (itemKeysLength !== 0) {\n        return item;\n      }\n      return null;\n    }\n\n    return null;\n  }\n\n  public convertDate(date: string | null): string {\n    if (date) {\n      return date.toString().split('-').reverse().join('.');\n    }\n    return '';\n  }\n}\n\nexport const meUtils = new MeUtils();\n","<template>\n  <div class=\"linkList\">\n    <router-link v-if=\"meUtils.isExistItem(item)\" :to=\"getLink()\" class=\"linkList__link\">\n      <span>{{ item.NAME }}</span>\n    </router-link>\n    <template v-if=\"item.LASTPRICE > 0\">\n      <div class=\"linkList__wrap\">\n        (<span class=\"linkList__itemLastPrice\"\n          >{{ item.LASTPRICE }}{{ item.CURRENCY_SIGN }},&nbsp;</span\n        >\n        <span :class=\"meUtils.checkIncreaseClass(item.MONTH_INCREASE)\">\n          {{ meUtils.checkExist(item.MONTH_INCREASE) }}%</span\n        >)\n      </div>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { meUtils } from '../../utils/meUtils';\n\nexport default defineComponent({\n  name: 'LinkStock',\n  props: {\n    item: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  setup(props) {\n    const route = useRoute();\n\n    const getLink = (): string =>\n      `/${String(route.params.locale).toLowerCase()}/stock/${String(\n        route.params.region,\n      ).toUpperCase()}/${props.item.NAME}/${props.item.SECID}/info`;\n\n    return {\n      route,\n      getLink,\n      meUtils,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\">\n//.linkList {\n//  display: flex;\n//  align-items: center;\n//  padding-top: 10px;\n//\n//  &__wrap {\n//    display: flex;\n//  }\n//}\n</style>\n","<template>\n  <div class=\"linkList\">\n    <router-link v-if=\"meUtils.isExistItem(item)\" :to=\"getLink()\" class=\"linkList__link\">\n      <span>{{ item.NAME }}</span>\n    </router-link>\n    <div class=\"linkList__wrap\">\n      (<span :class=\"meUtils.checkIncreaseClass(item['Доходность годовая'])\"\n        >{{ meUtils.checkExist(item['Доходность годовая']) }}%,&nbsp;</span\n      >\n      <span class=\"linkList__itemLastPrice\"> {{ meUtils.convertDate(item.MATDATE) }}</span\n      >)\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { meUtils } from '../../utils/meUtils';\n\nexport default defineComponent({\n  name: 'LinkBond',\n  props: {\n    item: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  setup(props) {\n    const route = useRoute();\n\n    const getLink = (): string =>\n      `/${String(route.params.locale).toLowerCase()}/bond/${String(\n        route.params.region,\n      ).toUpperCase()}/${props.item.NAME}/${props.item.SECID}/info`;\n\n    return {\n      meUtils,\n      getLink,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n","<template>\n  <div class=\"linkList\">\n    <router-link v-if=\"meUtils.isExistItem(item)\" :to=\"getLink()\" class=\"linkList__link\">\n      <span>{{ item.NAME }}</span>\n    </router-link>\n    <div class=\"linkList__wrap\">\n      (<span class=\"linkList__itemLastPrice\"\n        >{{ item.LASTPRICE }}{{ item.CURRENCY_SIGN }},&nbsp;</span\n      >\n      <span :class=\"meUtils.checkIncreaseClass(item.MONTH_INCREASE)\">\n        {{ meUtils.toFixed(item.MONTH_INCREASE) }}%,&nbsp;</span\n      >\n      <span :class=\"meUtils.checkIncreaseClass(item.QUOTATIONS_MONTH)\"\n        >{{ meUtils.toFixed(item.QUOTATIONS_MONTH) }}%</span\n      >)\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { meUtils } from '../../utils/meUtils';\n\nexport default defineComponent({\n  name: 'LinkETF',\n  props: {\n    item: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  setup(props) {\n    const route = useRoute();\n\n    const getLink = (): string =>\n      `/${String(route.params.locale).toLowerCase()}/etf/${String(\n        route.params.region,\n      ).toUpperCase()}/${props.item.NAME}/${props.item.SECID}/info`;\n\n    return {\n      meUtils,\n      getLink,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n","<template>\n  <div class=\"linkList\">\n    <router-link\n      v-if=\"meUtils.isExistItem(item)\"\n      class=\"linkList__link\"\n      :to=\"{ name: 'Index', params: { name: item.NAME, ticker: item.TICKER } }\"\n    >\n      <span>{{ item.NAME }}</span>\n    </router-link>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport { meUtils } from '../../utils/meUtils';\n\nexport default defineComponent({\n  name: 'LinkIndex',\n  props: {\n    item: {\n      type: Object,\n      default: () => {},\n    },\n  },\n  setup() {\n    return {\n      meUtils,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n","<template>\n  <template v-if=\"itemsMap.size !== 0\">\n    <div v-for=\"(symbol, index) in itemsMap\" :key=\"index\" class=\"stock\">\n      <h3>{{ symbol[0] }}</h3>\n      <div class=\"stocksGrid\" :style=\"getGridRowsCount(symbol[1])\">\n        <template v-if=\"route.params.type === 'stocks'\">\n          <LinkStock v-for=\"item in symbol[1]\" :key=\"item.ID\" class=\"linkList\" :item=\"item\" />\n        </template>\n        <template v-else-if=\"route.params.type === 'bonds'\">\n          <LinkBond v-for=\"item in symbol[1]\" :key=\"item.ID\" class=\"linkList\" :item=\"item\" />\n        </template>\n        <template v-else-if=\"route.params.type === 'etf'\">\n          <LinkETF v-for=\"item in symbol[1]\" :key=\"item.ID\" class=\"linkList\" :item=\"item\" />\n        </template>\n        <template v-else-if=\"route.params.type === 'indexes'\">\n          <LinkIndex v-for=\"item in symbol[1]\" :key=\"item.ID\" class=\"linkList\" :item=\"item\" />\n        </template>\n        <template v-else><h1>Ошибка. Неизвестный тип ценной бумаги.</h1></template>\n      </div>\n    </div>\n  </template>\n  <Loader v-else class=\"stock__loader\" />\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useSSR } from '@/use/useSSR';\nimport { IActivesList, IActivesListItem } from '@/interfaces/finplan/index';\nimport LinkStock from '@/views/SecurityList/modules/Link/Stock.vue';\nimport LinkBond from '@/views/SecurityList/modules/Link/Bond.vue';\nimport LinkETF from '@/views/SecurityList/modules/Link/ETF.vue';\nimport Loader from '@/components/Loader/index.vue';\nimport { DynamicObject } from '@/interfaces';\nimport LinkIndex from '@/views/SecurityList/modules/Link/Index.vue';\nimport { useApiFinplan } from '@/use/api/useApiFinplan';\n\nexport default defineComponent({\n  name: 'StocksContainer',\n  components: {\n    LinkIndex,\n    Loader,\n    LinkETF,\n    LinkBond,\n    LinkStock,\n  },\n  setup() {\n    const api = useApiFinplan();\n    const response = ref<IActivesList | any>(null);\n    const items = ref<DynamicObject[]>([]);\n    const itemsMap = ref<any>(new Map());\n    const route = useRoute();\n\n    const getGridRowsCount = (arr: []): string => {\n      const { length } = arr;\n      if (length > 6) {\n        return `grid-template-columns: repeat(2, 45%); grid-template-rows: repeat(${Math.round(\n          length / 2,\n        )}, 1fr)`;\n      }\n      return `grid-template-columns: repeat(1, 100%); grid-template-rows: repeat(${length}, 1fr)`;\n    };\n\n    const createGrid = (): void => {\n      let lastFirstSymbol = '';\n      let itemsArr: any[] = [];\n\n      items.value.forEach((item: IActivesListItem | DynamicObject) => {\n        const itemFirstSymbol = String(item.NAME.charAt(0));\n\n        if (lastFirstSymbol !== itemFirstSymbol) {\n          if (lastFirstSymbol !== '') {\n            itemsMap.value.set(lastFirstSymbol, [...itemsArr]);\n          }\n          itemsArr = [];\n          lastFirstSymbol = itemFirstSymbol;\n          itemsArr.push(item);\n        } else if (lastFirstSymbol !== '') {\n          itemsArr.push(item);\n        }\n      });\n    };\n\n    const init = async () => {\n      if (route.params.type === 'stocks') {\n        const _response = await api.getActivesList(\n          String(route.params.region).toUpperCase(),\n          'shares',\n          3000,\n          1,\n        );\n        response.value = _response.data;\n        items.value = [...response.value.ITEMS];\n        createGrid();\n      } else if (route.params.type === 'bonds') {\n        const _response = await api.getActivesList('RUS', 'obligations', 1000000, 1);\n        response.value = _response.data;\n        // console.log(response.value);\n        items.value = [...response.value.ITEMS];\n        createGrid();\n      } else if (route.params.type === 'etf') {\n        const _response = await api.getActivesList('RUS', 'shares_etf', 1000000, 1);\n        response.value = _response.data;\n        items.value = [...response.value.ITEMS];\n        createGrid();\n      } else if (route.params.type === 'indexes') {\n        const _response = await api.getActivesList('RUS', 'indexes', 1000000, 1);\n        // console.log(_response.data);\n        response.value = _response.data;\n        const resItems = response.value.ITEMS[0];\n        // console.log(resItems);\n        Object.keys(resItems).forEach((key) => {\n          items.value.push({\n            TICKER: resItems[key].TICKER,\n            NAME: resItems[key].NAME,\n            ID: resItems[key].ID,\n            EXCLUDE_FILTER: resItems[key].EXCLUDE_FILTER,\n          });\n        });\n        createGrid();\n      }\n    };\n\n    useSSR(async () => {\n      await init();\n    });\n\n    watch(\n      () => route.params,\n      () => {\n        itemsMap.value = new Map();\n        items.value = [];\n        response.value = '';\n        init();\n      },\n    );\n\n    return {\n      itemsMap,\n      route,\n      getGridRowsCount,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\">\n.stock {\n  flex-direction: column;\n  margin-top: 50px;\n\n  > h3 {\n    color: #00943d;\n    font-weight: 600;\n    font-size: 20px;\n    font-style: normal;\n    line-height: 24px;\n  }\n\n  ::v-deep .linkList__itemLastPrice {\n    color: #00943d;\n  }\n\n  ::v-deep &__increase {\n    &--bad {\n      color: #ed1d1d;\n    }\n\n    &--good {\n      color: #00943d;\n    }\n\n    &--no-data {\n      color: #656464;\n    }\n  }\n\n  &__loader {\n    margin-top: 30px;\n  }\n\n  .stocksGrid {\n    display: grid;\n\n    ::v-deep .linkList {\n      display: flex;\n      align-items: center;\n      padding-top: 10px;\n\n      &__wrap {\n        display: flex;\n      }\n    }\n\n    ::v-deep .linkList__link {\n      display: inline-block;\n      width: max-content;\n      margin-right: 5px;\n      color: #000;\n      font-weight: normal;\n      font-size: 16px;\n      font-style: normal;\n      line-height: 20px;\n      text-decoration: none;\n\n      &:hover {\n        color: #00943d;\n      }\n    }\n\n    @include respond-max-to(980) {\n      grid-auto-flow: unset !important;\n      grid-template-rows: unset !important;\n      grid-template-columns: repeat(1, 100%) !important;\n    }\n\n    grid-auto-flow: column;\n    grid-column-gap: 4%;\n  }\n}\n</style>\n","<template>\n  <div class=\"allStocks\">\n    <div class=\"flexWrapperColumn\">\n      <div class=\"stocksHeader defaultBlack27px\">\n        <template v-if=\"route.params.type === 'stocks' && route.params.region === 'rus'\">\n          <h1 class=\"allStocks__title\">{{ t('assetsList.stockRu') }}</h1>\n        </template>\n        <template v-if=\"route.params.type === 'stocks' && route.params.region === 'usa'\">\n          <h1 class=\"allStocks__title\">{{ t('assetsList.stockEn') }}</h1>\n        </template>\n        <template v-else-if=\"route.params.type === 'bonds'\">\n          <h1 class=\"allStocks__title\">{{ t('assetsList.bond') }}</h1>\n        </template>\n        <template v-else-if=\"route.params.type === 'etf'\">\n          <h1 class=\"allStocks__title\">{{ t('assetsList.etf') }}</h1>\n        </template>\n        <template v-else-if=\"route.params.type === 'indexes'\">\n          <h1 class=\"allStocks__title\">{{ t('assetsList.indexes') }}</h1>\n        </template>\n      </div>\n      <Swiper class=\"stocksFilter\" :free-mode=\"true\" :slides-per-view=\"'auto'\" :space-between=\"10\">\n        <SwiperSlide\n          v-for=\"filter in getAllStocks\"\n          :key=\"filter.name\"\n          @click=\"changeFilter(filter)\"\n        >\n          <span :class=\"{ isPicked: filter.isPicked }\">{{ filter.name }}</span>\n        </SwiperSlide>\n      </Swiper>\n      <div class=\"stocksMain\">\n        <div class=\"stocks\">\n          <template v-if=\"route.params.type === 'bonds' || route.params.type === 'etf'\">\n            <Alert\n              v-if=\"route.params.type === 'bonds'\"\n              label=\"В скобках указаны доходность и дата погашения облигаций\"\n            />\n            <Alert\n              v-if=\"route.params.type === 'etf'\"\n              label=\"В скобках указаны последняя цена закрытия, прирост за месяц и комиссия\"\n            />\n          </template>\n          <Alert v-else label=\"В скобках указаны последняя цена закрытия и прирост за месяц\" />\n          <StocksContainer />\n        </div>\n        <div class=\"rightInfo\">\n          <UtilsColumn />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue/dist/vue.esm-bundler.js';\nimport { Swiper, SwiperSlide } from 'swiper/vue';\n\nimport { useStore } from 'vuex';\nimport { useRoute } from 'vue-router';\nimport mutations from '../../store/mutations';\n\nimport Alert from '../../components/alert/Alert.vue';\nimport StocksContainer from '../../components/stocksContainer/StocksContainer.vue';\nimport { useSSR } from '@/use/useSSR';\nimport { appStore } from '@/store/app';\nimport UtilsColumn from '@/views/SecurityList/modules/UtilsColumn/index.vue';\n\nconst { STOCKS_FILTER_CHANGE_PICKED, STOCKS_FILTER_CURRENT } = mutations;\n\nexport default defineComponent({\n  name: 'SecurityList',\n  components: {\n    UtilsColumn,\n    StocksContainer,\n    Alert,\n    Swiper,\n    SwiperSlide,\n  },\n\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n\n    const getAllStocks = computed(() => store.getters['stocksFiltersStore/allStocks']);\n    const getCurrentFilter = computed(() => store.getters['stocksFiltersStore/currentFilter']);\n\n    const changeFilter = (pickedFilter) => {\n      storeApp.commit(`stocksFiltersStore/${STOCKS_FILTER_CHANGE_PICKED}`);\n      storeApp.commit(`stocksFiltersStore/${STOCKS_FILTER_CURRENT}`, pickedFilter);\n    };\n\n    return {\n      route,\n      getAllStocks,\n      changeFilter,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\">\n.allStocks {\n  background: #f1f1f1;\n\n  .flexWrapperColumn {\n    margin: auto;\n  }\n\n  &__title {\n    @include respond-max-to(600) {\n      padding: 0 20px;\n    }\n  }\n\n  .stocksHeader {\n    padding: 10px 0 9px 0;\n    border-bottom: 1px solid #cbcbcb;\n  }\n\n  .stocksFilter {\n    padding: 22px 0;\n    border-bottom: 1px solid #cbcbcb;\n\n    .isPicked {\n      color: #fff;\n      background-color: #00943d;\n      border-radius: 5px;\n\n      &:hover {\n        color: #fff;\n      }\n    }\n\n    span {\n      //width: max-content;\n      padding: 5px 10px;\n      color: #656464;\n      font-size: 14px;\n      font-style: normal;\n      line-height: 17px;\n      cursor: pointer;\n\n      &:hover {\n        color: green;\n      }\n    }\n  }\n\n  .stocksMain {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    .stocks {\n      display: flex;\n      flex-direction: column;\n      width: 75%;\n      padding: 10px 0;\n\n      @include respond-max-to(1100) {\n        width: 65%;\n      }\n\n      @include respond-max-to(800) {\n        width: 100%;\n      }\n    }\n\n    .rightInfo {\n      display: flex;\n      flex-direction: column;\n\n      @include respond-max-to(800) {\n        display: none;\n      }\n    }\n\n    @include respond-max-to(600) {\n      padding: 0 20px;\n    }\n  }\n\n  .swiper-slide {\n    width: auto;\n\n    @include respond-max-to(600) {\n      &:first-child {\n        margin-left: 20px;\n      }\n      &:last-child {\n        margin-right: 20px;\n      }\n    }\n  }\n\n  .swiper-container {\n    margin-right: unset;\n    margin-left: unset;\n  }\n}\n</style>\n"],"names":["_sfc_main$6","defineComponent","alert","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","MeUtils","value","to","_value","item","date","meUtils","_sfc_main$5","props","route","useRoute","_resolveComponent","_createBlock","_component_router_link","_createCommentVNode","_hoisted_3","_hoisted_4","_toDisplayString","_normalizeClass","_sfc_main$4","_sfc_main$3","_sfc_main$2","_sfc_main$1","LinkIndex","Loader","LinkETF","LinkBond","LinkStock","api","useApiFinplan","response","ref","items","itemsMap","getGridRowsCount","arr","length","createGrid","lastFirstSymbol","itemsArr","itemFirstSymbol","init","__async","_response","resItems","key","useSSR","watch","_component_Loader","_Fragment","_renderList","symbol","index","_normalizeStyle","_component_LinkStock","_component_LinkBond","_component_LinkETF","_component_LinkIndex","STOCKS_FILTER_CHANGE_PICKED","STOCKS_FILTER_CURRENT","mutations","_sfc_main","UtilsColumn","StocksContainer","Alert","Swiper","SwiperSlide","store","useStore","getAllStocks","computed","pickedFilter","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_component_Swiper","filter","_component_SwiperSlide","$event","_withCtx","_hoisted_9","_hoisted_10","_component_Alert","_createVNode","_component_StocksContainer"],"mappings":"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"}