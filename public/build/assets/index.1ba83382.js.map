{"version":3,"file":"index.1ba83382.js","sources":["../../../resources/js/views/Lists/modules/Pages/About/modules/Body/index.vue","../../../resources/js/views/Lists/modules/Pages/About/index.vue"],"sourcesContent":["<template>\n  <div class=\"indicatorsPage\">\n    <p v-html=\"industryItemStore.previewTextHtml\" />\n    <div class=\"greyBg\">\n      <div class=\"flexWrapperColumn\">\n        <button v-if=\"hasBeenChanged\" class=\"resetBtn\" @click=\"onCLickResetBtn()\">\n          Сбросить график\n        </button>\n        <div class=\"checkboxes flexRowCenter\">\n          <DocumentIndicatorsChartCheckboxes\n            v-for=\"item in getChartDataKeys\"\n            :id=\"item\"\n            :key=\"item\"\n            :item=\"getChart[item]\"\n            @onClick=\"onChangeChartDataView\"\n          />\n        </div>\n        <ChartDynamic :categories=\"getChartCategories\" :data=\"getChartDataValues\" />\n      </div>\n    </div>\n    <DocumentIndicatorsTable\n      :categories=\"getChartCategories\"\n      :data=\"getChart\"\n      :is-init=\"isInit\"\n      :quarters=\"[]\"\n      @onChangeChartDataView=\"onChangeChartDataView\"\n      @onChangeParam=\"onChangeParam\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useIndustryItemStore } from '@/store/pinia/industryItem';\nimport ChartDynamic from '@/components/Charts/Dynamic/index.vue';\nimport DocumentIndicatorsTable from '@/views/Document/modules/Views/modules/IndicatorsTable/index.vue';\nimport DocumentIndicatorsChartCheckboxes from '@/views/Document/modules/Views/modules/Pages/CompanyIndicators/modules/ChartCheckboxes/index.vue';\nimport Loader from '@/components/Loader/index.vue';\n\nexport default defineComponent({\n  name: 'ListWrapAboutBody',\n  components: {\n    Loader,\n    DocumentIndicatorsChartCheckboxes,\n    DocumentIndicatorsTable,\n    ChartDynamic,\n  },\n  setup() {\n    const industryItemStore = useIndustryItemStore();\n\n    const isInit = ref<boolean>(false);\n    const hasBeenChanged = ref<boolean>(false);\n\n    const getChartDataValues = computed(() => industryItemStore.getChartValues);\n    const getChartCategories = computed(() => industryItemStore.getChartCategories);\n    const getChartDataKeys = computed(() => industryItemStore.getChartDataKeys);\n    const getChart = computed(() => industryItemStore.getChart);\n\n    const onCLickResetBtn = () => {\n      isInit.value = false;\n      hasBeenChanged.value = false;\n      industryItemStore.resetChart();\n      isInit.value = true;\n    };\n\n    const onChangeChartDataView = (key: string): void => {\n      hasBeenChanged.value = true;\n      industryItemStore.toggleChartItemView(key);\n    };\n\n    const onChangeParam = () => {};\n\n    onMounted(() => {\n      isInit.value = true;\n    });\n\n    return {\n      onCLickResetBtn,\n      onChangeChartDataView,\n      onChangeParam,\n      getChart,\n      industryItemStore,\n      isInit,\n      hasBeenChanged,\n      getChartDataValues,\n      getChartCategories,\n      getChartDataKeys,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\">\n::v-deep(.flexWrapperColumn) {\n  padding-right: 0 !important;\n  padding-left: 0 !important;\n}\n\n::v-deep(.rowIndex.flexRowCenter.tableValue.tableRowName) {\n  max-width: 300px !important;\n\n  p {\n    width: 300px !important;\n  }\n}\n\n::v-deep(.rowValue.flexRowCenter.tableValue) {\n  p {\n    min-width: 150px !important;\n    max-width: 150px !important;\n  }\n}\n\n::v-deep(.period) {\n  display: none;\n}\n\n::v-deep(.switcher.flexRowCenter) {\n  display: none !important;\n}\n\n::v-deep(.arrows.flexRowCenter) {\n  img {\n    margin: 0 30px 20px 0 !important;\n  }\n}\n\n.indicatorsPage {\n  .flexWrapperColumn {\n    margin: auto;\n  }\n\n  .resetBtn {\n    width: max-content;\n    margin-bottom: 10px;\n    padding: 8px 10px;\n    color: #fff;\n    background: #2a8634;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n\n    &:hover {\n      background: #0f4319;\n    }\n  }\n\n  .graph {\n    width: 100%;\n    height: 800px;\n    background-color: lightblue;\n  }\n\n  .checkboxes {\n    display: flex;\n    flex-wrap: wrap;\n    width: 70%;\n    margin-bottom: 20px;\n\n    .checkbox {\n      width: max-content;\n      cursor: pointer;\n\n      > p {\n        margin-left: 20px;\n        font-size: 18px;\n        line-height: 150%;\n      }\n\n      &:not(:last-child) {\n        margin-right: 35px;\n      }\n\n      .checkboxRound {\n        justify-content: center;\n        width: 50px;\n        min-width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        cursor: pointer;\n\n        .clicked {\n          width: 20px;\n          height: 20px;\n          background-color: white;\n          border-radius: 50%;\n        }\n      }\n    }\n  }\n\n  @media (max-width: 1600px) {\n    .checkboxes {\n      width: 80%;\n    }\n  }\n\n  @media (max-width: 1400px) {\n    .checkboxes {\n      .checkbox {\n        > p {\n          font-size: 16px;\n        }\n\n        .checkboxRound {\n          width: 17px;\n          min-width: 17px;\n          height: 17px;\n\n          .clicked {\n            width: 8px;\n            height: 8px;\n          }\n        }\n      }\n    }\n  }\n\n  @media (max-width: 1200px) {\n    .checkboxes {\n      width: 90%;\n    }\n  }\n\n  @media (max-width: 1100px) {\n    .checkboxes {\n      width: 100%;\n    }\n  }\n\n  @media (max-width: 900px) {\n    .graph {\n      height: 300px;\n    }\n\n    .checkboxes {\n      flex-direction: column;\n      align-items: flex-start;\n      margin-top: -20px;\n      margin-left: 0;\n\n      .checkbox {\n        display: flex;\n        width: 100%;\n        margin-top: 10px;\n\n        > p {\n          width: 100%;\n        }\n\n        .checkboxRound {\n          margin-left: 0;\n        }\n      }\n    }\n  }\n\n  @media (max-width: 600px) {\n    .flexWrapperColumn {\n      padding: 20px;\n\n      .graph {\n        height: 300px;\n      }\n\n      .checkboxes {\n        flex-direction: column;\n        align-items: flex-start;\n        margin-top: -20px;\n        margin-left: 0;\n\n        .checkbox {\n          display: flex;\n          width: 100%;\n          margin-top: 10px;\n\n          > p {\n            width: 100%;\n          }\n\n          .checkboxRound {\n            margin-left: 0;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <ListsWrapHeader />\n  <ListsWrapBody v-if=\"isInit\">\n    <ListWrapAboutBody />\n  </ListsWrapBody>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\nimport ListsWrapHeader from '@/views/Lists/modules/Header/index.vue';\nimport ListsWrapBody from '@/views/Lists/modules/Body/index.vue';\nimport ListWrapAboutBody from '@/views/Lists/modules/Pages/About/modules/Body/index.vue';\nimport { useIndustryItemStore } from '@/store/pinia/industryItem';\nimport { useSSR } from '@/use/useSSR';\nimport Loader from '@/components/Loader/index.vue';\n\nexport default defineComponent({\n  name: 'ListsWrapAbout',\n  components: {\n    Loader,\n    ListWrapAboutBody,\n    ListsWrapBody,\n    ListsWrapHeader,\n  },\n  setup() {\n    const route = useRoute();\n    const industryItemStore = useIndustryItemStore();\n\n    const isInit = ref(false);\n\n    const init = async () => {\n      await industryItemStore.init(String(route.params.id), String(route.params.type));\n      isInit.value = true;\n    };\n\n    onMounted(async () => {\n      if (!isInit.value) {\n        await init();\n      }\n    });\n\n    onBeforeUnmount(() => {\n      isInit.value = false;\n      industryItemStore.reset();\n    });\n\n    return {\n      isInit,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n"],"names":["_sfc_main$1","defineComponent","Loader","DocumentIndicatorsChartCheckboxes","DocumentIndicatorsTable","ChartDynamic","industryItemStore","useIndustryItemStore","isInit","ref","hasBeenChanged","getChartDataValues","computed","getChartCategories","getChartDataKeys","getChart","onCLickResetBtn","onChangeChartDataView","key","onChangeParam","onMounted","_hoisted_1","_hoisted_2","_component_DocumentIndicatorsTable","_resolveComponent","_openBlock","_createElementVNode","_ctx","_hoisted_3","_hoisted_4","_createElementBlock","_cache","$event","_createCommentVNode","_hoisted_5","_Fragment","_renderList","item","_createBlock","_component_DocumentIndicatorsChartCheckboxes","_component_ChartDynamic","_sfc_main","ListWrapAboutBody","ListsWrapBody","ListsWrapHeader","route","useRoute","init","__async","onBeforeUnmount","_createVNode","_component_ListsWrapHeader","_component_ListsWrapBody","_withCtx"],"mappings":"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"}