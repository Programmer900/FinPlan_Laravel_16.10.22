{"version":3,"file":"index.246ba7de.js","sources":["../../../resources/js/views/Document/modules/Views/modules/Pages/Info/index.vue"],"sourcesContent":["<template>\n  <div class=\"greyBg\">\n    <div class=\"flexWrapperColumn\">\n      <ul class=\"default-w-400\">\n        <li v-for=\"index in isTranslationLength\" :key=\"index\">\n          <p style=\"font-weight: bold\">{{ $t(`${typeStock}[${index - 1}].name`) }}</p>\n          <p>\n            {{ getValue(\n                $t(`${typeStock}[${index - 1}].path`),\n                $t(`${typeStock}[${index - 1}].symbol`),\n                $t(`${typeStock}[${index - 1}].typeValue`),\n                $t(`${typeStock}[${index - 1}].typeIndicator`),\n              )\n            }}\n          </p>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n  import {defineComponent, onMounted} from 'vue';\nimport { find, matchesProperty } from 'lodash';\nimport i18n from '@/plugins/i18n/vue-i18n';\nimport type { DynamicObject } from '@/interfaces';\n\nimport { formattingNum, formattingToShort } from '@/services/formattingNum.service';\nimport { useApiFinplan } from \"@/use/api/useApiFinplan\";\n\nexport default defineComponent({\n  name: 'DocumentViewInfo',\n  setup() {\n    const store = useStore();\n    const api = useApiFinplan()\n    const typeStock = ref<string>()\n\n    const getTranslationLength = (): number => i18n.global.messages.ru.aboutStock.length;\n    const getTranslationUSALength = (): number => i18n.global.messages.ru.aboutStockUSA.length;\n\n    const getDocData = computed(() => store.getters['documentStore/getData']);\n    const getCurrencyForRegion = computed(() => store.getters['documentStore/getCurrencyForRegion']);\n    const getRegion = computed(() => store.getters['documentStore/getRegion'])\n    const deepFind = (JSONArray, keyPath, keyValue) =>\n      find(JSONArray, matchesProperty(keyPath, keyValue));\n\n    const isTranslationLength = computed(() => {\n      if(store.getters['documentStore/getRegion'] === 'RUS') {\n        typeStock.value = 'aboutStock'\n        return getTranslationLength()\n      } else {\n        typeStock.value = 'aboutStockUSA'\n        return getTranslationUSALength()\n      }\n    })\n\n    const getValue = (path: string, symbol?: string, typeValue?: string, typeIndicator?: string): string => {\n      try {\n        let deepObject: undefined | DynamicObject;\n        let result = 'Нет данных';\n\n        let sym = ''\n        let dividendsDescription = ''\n        let dividendsProfitPercent = ''\n\n        const objectPath: string[] = path.split('.');\n\n        objectPath.forEach((_path) => {\n          if (deepObject === undefined) {\n            if(_path === 'PROP_SEKTOR') {\n              _path = 'PROP_SEKTOR'\n            }\n            deepObject = getDocData.value[_path]; //RADAR_DATA\n          } else {\n            if(_path === 'SECTOR') {\n              _path = 'SECTOR'\n            }\n            deepObject = deepObject[_path];\n          }\n        });\n\n\n\n        if(path === 'RADAR_DATA.PROPS.PROP_DIVIDENDY_2018') {\n          dividendsProfitPercent = getDocData.value['RADAR_DATA']['DYNAM']['Дивиденды %'] ? (' или ' + getDocData.value['RADAR_DATA']['DYNAM']['Дивиденды %'] + '% ') : ''\n          dividendsDescription = getDocData.value['RADAR_DATA']['PROPS']['PROP_ISTOCHNIK'] || ''\n        }\n\n        if(path === 'RADAR_DATA.PROPS.BETTA') {\n          deepObject = deepObject?.toFixed(2)\n        }\n\n        if(path === 'RADAR_DATA.PROPS.ISSUESIZE') {\n          //@ts-ignore\n          deepObject = deepObject?.toLocaleString()\n        }\n\n        if(path === 'RADAR_DATA.PROPS.PROP_SHORT') {\n          //@ts-ignore\n          if(deepObject === '') {\n            //@ts-ignore\n            deepObject = 'Невозможны'\n          } else {\n            //@ts-ignore\n            deepObject = deepObject?.toLocaleString()\n          }\n        }\n\n        if(path === 'RADAR_DATA.PROPS.PROP_PROSAD') {\n          //@ts-ignore\n          deepObject = 100 - Number((getDocData.value.RADAR_DATA.PROPS.PROP_PROSAD / getDocData.value.RADAR_DATA.PROPS.LASTPRICE) * 100)\n        }\n\n        if(path === 'RADAR_DATA.PROPS.CAP_X_FREEFLOAT_PERCENT') {\n          //@ts-ignore\n          deepObject = Number(getDocData.value.RADAR_DATA.PROPS.CAP_X_FREEFLOAT / getDocData.value.RADAR_DATA.PROPS.ISSUECAPITALIZATION) * 100\n        }\n\n        if(symbol) {\n          switch (symbol) {\n            case \"currency\":\n              sym = getCurrencyForRegion.value\n              break\n            case \"%\":\n              sym = '%'\n              break\n            case \"шт.\":\n              sym = 'шт.'\n              break\n          }\n        }\n\n        if(typeValue === 'num') {\n          result = formattingToShort(Number(deepObject),2, typeIndicator)\n        } else {\n          result = String(deepObject);\n        }\n\n        return result + \" \" + sym + dividendsProfitPercent + dividendsDescription;\n      } catch (e) {\n        console.error(e);\n        return 'Нет данных';\n      }\n    };\n\n    const initMiddleSectorValue = async () => {\n       const response = await api.getSectorsList(1, 100)\n    }\n\n\n    // const init = async (): Promise<void> => {\n    //   if (route.params.document === 'obligation') {\n    //     const bond = await getBondInfo(route.params.company, route.params.region);\n    //     const emitent = await getEmitentInfo(bond.RADAR_DATA.COMPANY.ID);\n    //\n    //     bonds.value = emitent.OBLIGATIONS;\n    //     console.log(bonds.value);\n    //   }\n    // };\n\n    return {\n      getDocData,\n      typeStock,\n\n      isTranslationLength,\n      getValue,\n\n      formattingNum,\n      formattingToShort,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\">\n.flexWrapperColumn {\n  margin: auto;\n\n  > ul {\n    margin-top: -30px;\n    list-style: none;\n\n    > li {\n      display: flex;\n      flex-direction: row;\n      //justify-content: space-between;\n      width: 700px;\n      margin-top: 30px;\n\n      > p {\n        display: flex;\n        flex-direction: column;\n        width: 50%;\n        margin: 0;\n        color: black;\n        font-size: 18px;\n      }\n\n      > span {\n        color: #939393;\n        font-size: 18px;\n      }\n\n      &::before {\n        display: none;\n      }\n    }\n  }\n}\n\n@media (max-width: 1000px) {\n  .flexWrapperColumn {\n    > ul {\n      margin-top: -30px;\n\n      > li {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        width: 100%;\n        margin-top: 30px;\n      }\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  .flexWrapperColumn {\n    width: 100%;\n    padding: 20px;\n    > ul {\n      margin-top: -30px;\n\n      > li {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n        width: 100%;\n        margin-top: 30px;\n\n        > p {\n          width: 60%;\n          font-size: 16px;\n        }\n\n        > span {\n          width: 40%;\n          margin-left: 20px;\n          font-size: 15px;\n        }\n      }\n    }\n  }\n}\n</style>\n"],"names":["_sfc_main","defineComponent","store","useStore","useApiFinplan","typeStock","ref","getTranslationLength","i18n","getTranslationUSALength","getDocData","computed","getCurrencyForRegion","isTranslationLength","path","symbol","typeValue","typeIndicator","deepObject","result","sym","dividendsDescription","dividendsProfitPercent","_path","formattingToShort","formattingNum","_hoisted_2","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_3","_Fragment","_renderList","index","_toDisplayString"],"mappings":"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"}