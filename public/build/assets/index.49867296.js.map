{"version":3,"file":"index.49867296.js","sources":["../../../resources/js/views/Lists/index.vue"],"sourcesContent":["<template>\n  <section>\n    <router-view v-if=\"isInit\" />\n    <Loader v-else />\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, onServerPrefetch, onUnmounted, ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nimport Loader from '@/components/Loader/index.vue';\n\nexport default defineComponent({\n  name: 'ListsWrapPage',\n  components: { Loader },\n  setup() {\n    const route = useRoute();\n    const store = useStore();\n    const isInit = ref<boolean>(false);\n\n    const reset = () => {\n      isInit.value = false;\n      // store.commit('listsStore/setDefaultState');\n    };\n\n    const init = async () => {\n      const routeName = String(route.name);\n      const routeTypeParam = String(route.params.type);\n\n      if (routeName === 'ListsWrapAbout') {\n        if (routeTypeParam === 'industries') {\n          isInit.value = await store.dispatch('listsStore/initAbout', {\n            title: 'Финансовая отрасль РФ',\n          });\n        } else if (routeTypeParam === 'sectors') {\n          isInit.value = await store.dispatch('listsStore/initAbout', {\n            title: 'Технологический сектор США',\n          });\n        } else {\n          console.warn('Неизвестный тип роута');\n        }\n      }\n\n      if (routeName === 'ListsWrapAll') {\n        if (routeTypeParam === 'industries') {\n          isInit.value = await store.dispatch('listsStore/initAbout', {\n            title: 'Список отраслей РФ',\n          });\n        } else if (routeTypeParam === 'sectors') {\n          isInit.value = await store.dispatch('listsStore/initAbout', {\n            title: 'Список секторов США',\n          });\n        } else {\n          console.warn('Неизвестный тип роута');\n        }\n      }\n    };\n\n    onServerPrefetch(async () => {\n      await init();\n    });\n\n    onMounted(async () => {\n      if (!isInit.value) {\n        await init();\n      }\n    });\n\n    onUnmounted(() => {\n      reset();\n    });\n\n    watch(\n      () => route.params.type,\n      async () => {\n        reset();\n        await init();\n      },\n    );\n\n    return {\n      isInit,\n    };\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n"],"names":["_sfc_main","defineComponent","Loader","route","useRoute","store","useStore","isInit","ref","reset","init","__async","routeName","routeTypeParam","onServerPrefetch","onMounted","onUnmounted","watch","_resolveComponent","_createElementBlock","_ctx","_openBlock","_createBlock","_component_router_view","_component_Loader"],"mappings":"gRAaA,MAAAA,EAAeC,kBAAgB,CAC7B,KAAM,gBACN,WAAY,CAAE,OAAAC,CAAO,EACrB,OAAQ,CACN,MAAMC,EAAQC,IACRC,EAAQC,IACRC,EAASC,MAAa,EAAK,EAE3BC,EAAQ,IAAM,CAClBF,EAAO,MAAQ,EAAA,EAIXG,EAAO,IAAYC,EAAA,sBACjB,MAAAC,EAAY,OAAOT,EAAM,IAAI,EAC7BU,EAAiB,OAAOV,EAAM,OAAO,IAAI,EAE3CS,IAAc,mBACZC,IAAmB,aACrBN,EAAO,MAAQ,MAAMF,EAAM,SAAS,uBAAwB,CAC1D,MAAO,sHAAA,CACR,EACQQ,IAAmB,UAC5BN,EAAO,MAAQ,MAAMF,EAAM,SAAS,uBAAwB,CAC1D,MAAO,oJAAA,CACR,EAED,QAAQ,KAAK,sHAAuB,GAIpCO,IAAc,iBACZC,IAAmB,aACrBN,EAAO,MAAQ,MAAMF,EAAM,SAAS,uBAAwB,CAC1D,MAAO,oGAAA,CACR,EACQQ,IAAmB,UAC5BN,EAAO,MAAQ,MAAMF,EAAM,SAAS,uBAAwB,CAC1D,MAAO,0GAAA,CACR,EAED,QAAQ,KAAK,sHAAuB,EAExC,GAGFS,OAAAA,EAAAA,iBAAiB,IAAYH,EAAA,sBAC3B,MAAMD,EAAK,CAAA,EACZ,EAEDK,EAAAA,UAAU,IAAYJ,EAAA,sBACfJ,EAAO,QACV,MAAMG,EAAK,EACb,EACD,EAEDM,EAAAA,YAAY,IAAM,CACVP,GAAA,CACP,EAEDQ,EAAA,MACE,IAAMd,EAAM,OAAO,KACnB,IAAYQ,EAAA,sBACJF,IACN,MAAMC,EAAK,CACb,EAAA,EAGK,CACL,OAAAH,CAAA,CAEJ,CACF,CAAC,sEApFCW,mBAGU,QAAA,uBAFRC,qBAA6B,UAAA,KAAA,CAAAC,EAAA,QAAAC,EAAA,UAAA,EAAAC,EAAAA,YAAAC,EAAA,CAAA,IAAA,CAAA,CAAA,IAAAF,EAAAA,UAAA,EAAAC,cAAAE,EAAA,CAAA,IAAA,CAAA,CAAA"}