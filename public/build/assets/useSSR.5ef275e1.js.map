{"version":3,"file":"useSSR.5ef275e1.js","sources":["../../../resources/js/use/useSSR.ts"],"sourcesContent":["import { onMounted, onServerPrefetch, onUnmounted } from 'vue';\nimport { appStore } from '@/store/app';\n\nconst isAsync = (_f) => {\n  if (!_f || !(_f instanceof Function)) throw new TypeError('!_f of _f not Function');\n  if (_f[Symbol.toStringTag] === 'AsyncFunction') throw new TypeError('AsyncFunction');\n\n  const isPromiseOrAsync = (_f) => _f === Promise.resolve(_f);\n\n  let result = null;\n  try {\n    result = _f();\n\n    if (isPromiseOrAsync(result)) {\n      result = null;\n      // throw new TypeError('PromiseOrAsync');\n      return true;\n    }\n  } catch (_e) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const useSSR = (callback: () => void): boolean => {\n  const isInitSSR = ref(false);\n\n  onMounted(async () => {\n    if (!isInitSSR.value) {\n      await callback();\n    }\n  });\n\n  onServerPrefetch(async () => {\n    await callback();\n    isInitSSR.value = true;\n  });\n\n  return isInitSSR.value;\n};\n"],"names":["useSSR","callback","isInitSSR","ref","onMounted","__async","onServerPrefetch"],"mappings":"oPAyBa,MAAAA,EAAUC,GAAkC,CACjD,MAAAC,EAAYC,MAAI,EAAK,EAE3BC,OAAAA,EAAAA,UAAU,IAAYC,EAAA,wBACfH,EAAU,QACb,MAAMD,EAAS,EACjB,EACD,EAEDK,EAAAA,iBAAiB,IAAYD,EAAA,wBAC3B,MAAMJ,EAAS,EACfC,EAAU,MAAQ,EAAA,EACnB,EAEMA,EAAU,KACnB"}